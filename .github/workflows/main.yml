name: CI/CD

on:
  push:
    branches: ['main', 'release']
  pull_request:
    branches: ['main', 'release']
    
env:
  LIGHTSAIL_SSH_KEY: ${{ secrets.LIGHTSAIL_SSH_KEY }}
  LIGHTSAIL_HOST: ${{ secrets.LIGHTSAIL_HOST }}
  LIGHTSAIL_USERNAME: bitnami
  AWS_REGION: ap-northeast-2

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 체크아웃
        uses: actions/checkout@v4
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: 권한
        run: |
          chmod +x gradlew

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop' }}

      - name: AWS 인증하기
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Deploy
        run: |
          echo "Deploying version ${{ steps.get_latest_tag.outputs.latest_tag }}"
        
      - name: Add SSH key
        run: |
          echo "${{ secrets.LIGHTSAIL_SSH_KEY }}" > key.pem
          chmod 600 key.pem
          
      - name: Add remote host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.LIGHTSAIL_HOST }} >> ~/.ssh/known_hosts

      - name: Transfer JAR files to Lightsail
        run: |
          scp -o StrictHostKeyChecking=no -i key.pem -r build/libs/*.jar ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }}:/home/${{ secrets.LIGHTSAIL_USER }}/app

      - name: Prepare app directory and start application
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }} "mkdir -p /home/${{ secrets.LIGHTSAIL_USER }}/app"
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }} "pkill -f 'java -jar' || true && nohup java -jar /home/${{ secrets.LIGHTSAIL_USER }}/app/*.jar > /home/${{ secrets.LIGHTSAIL_USER }}/app/app.log 2>&1 &"

      - name: Create app directory if not exists
        run: |
          cd /home/${{ secrets.LIGHTSAIL_USER }}/app
          pkill -f 'java -jar' || true
          nohup java -jar *.jar > app.log 2>&1 &
  
